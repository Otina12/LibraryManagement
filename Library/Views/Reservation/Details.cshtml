@using Library.Model.Enums;
@model Library.Service.Dtos.Reservations.Get.ReservationDetailsDto

@{
    ViewData["Title"] = "Reservation Details";
    var isComplete = Model.QuantityToReturn == 0;
}

<body>
    <div class="details-container">
        <h1 class="main-title">Reservation Details</h1>

        <div class="customer-info">
            <h3>Customer: <span>@Model.Customer.Name @Model.Customer.Surname</span></h3>
            <h3>Book: <span>@Model.Book.OriginalBook.Title</span></h3>
            <h3>Supposed Return Date: <span>@Model.SupposedReturnDate.ToShortDateString()</span></h3>
            @if (isComplete)
            {
                <h3 style="color: white">Reservation Complete</h3>
            }
            else
            {
                <h3>Quantity to Return: <span>@Model.QuantityToReturn</span></h3>
            }
        </div>

        <div class="book-copies">
            <h2>Book Copies</h2>
            <form id="checkoutForm" method="post" action="/Reservation/Checkout">
                <input type="hidden" name="ReservationId" value="@Model.ReservationId" />

                @if (!isComplete)
                {
                    <div class="form-group set-all-status">
                        <label for="setAllStatus">Set All Status:</label>
                        <select id="setAllStatus" class="form-control">
                            <option value="">Select Status</option>
                            @foreach (var status in Enum.GetValues(typeof(BookCopyStatus)))
                            {
                                <option value="@((int)status)">@status</option>
                            }
                        </select>
                    </div>
                }

                <table class="table" id="reservationTable">
                    <thead>
                        <tr>
                            <th>Book Copy ID</th>
                            <th>Location</th>
                            <th>Taken Status</th>
                            <th>Return Status</th>
                            <th>Return Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.ReservationCopies.Count; i++)
                        {
                            var reservationCopy = Model.ReservationCopies[i];
                            <tr class="table-row" style="display:none;">
                                <td><a asp-controller="BookCopy" asp-action="Details" asp-route-id="@reservationCopy.BookCopyId">@reservationCopy.BookCopyId</a></td>
                                <td>Room ID: @reservationCopy.RoomId | Shelf ID: @(@reservationCopy.ShelfId.HasValue ? reservationCopy.ShelfId.Value.ToString() : "N/A")</td>
                                <td>@reservationCopy.TakenStatus</td>
                                <td>
                                    @if (reservationCopy.ReturnedStatus is not null)
                                    {
                                        <div id="status-@reservationCopy.BookCopyId">
                                            <span class="@(reservationCopy.ReturnedStatus == BookCopyStatus.Lost ? "status-lost" : "")">
                                                @reservationCopy.ReturnedStatus
                                            </span>
                                        </div>
                                        @if (reservationCopy.ReturnedStatus == BookCopyStatus.Lost) // when book copy is lost, we also want to have options to return it or another copy
                                        {
                                            <div class="lost-book-actions">
                                                <a onclick="handleLateReturn('@reservationCopy.ReservationCopyId', '@reservationCopy.BookCopyId')">Late Return</a>
                                                <a onclick="handleReturnAnotherCopy('@reservationCopy.ReservationCopyId', '@Model.Customer.Id')">Return another copy</a>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <select style="width: 100px;" name="ReservationCopyCheckouts[@i].NewStatus" asp-items="@Html.GetEnumSelectList<BookCopyStatus>()">
                                            <option value="">Status</option>
                                        </select>
                                        <input type="hidden" name="ReservationCopyCheckouts[@i].ReservationCopyId" value="@reservationCopy.ReservationCopyId" />
                                        <input type="hidden" name="ReservationCopyCheckouts[@i].BookCopyId" value="@reservationCopy.BookCopyId" />
                                    }
                                </td>
                                @if (reservationCopy.ReturnDate is not null)
                                {
                                    <td>@reservationCopy.ReturnDate.Value.ToString("dd-MM-yyyy")</td>
                                }
                                else
                                {
                                    <td>N/A</td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
                <button style="margin-top: 10px;" type="button" id="showMore" onclick="showMoreRows()">Show More</button>

                <div id="checkoutButtonContainer" style="text-align: right; display: none;">
                    <button type="submit" id="checkoutButton" class="btn btn-primary">Checkout</button>
                </div>
            </form>
        </div>

        <div class="other-reservations">
            <h2>Upcoming Reservations of @Model.Customer.Name</h2>
            @if (Model.OtherReservationsOfCustomer.Any())
            {
                <ul>
                    @foreach (var reservation in Model.OtherReservationsOfCustomer)
                    {
                        <li>
                            <a asp-action="Details" asp-route-id="@reservation.ReservationId">
                                @reservation.Book.OriginalBook.Title (@reservation.QuantityToReturn copies)
                            </a>
                            <span class="return-date">Return Date: @reservation.SupposedReturnDate.ToString("dd-MM-yyyy")</span>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p class="no-reservations">No upcoming reservations found for this customer.</p>
            }
        </div>
    </div>
</body>

@await Html.PartialAsync("_Modal", new { ModalId = "bookCopyModal", CreateFormId = "createBookCopyForm", EditFormId = "" })

@section Scripts {
    <script>
        let currentIndex = 0;
        const rowsPerPage = 6;

        function showMoreRows() {
            const rows = document.querySelectorAll("#reservationTable .table-row");
            for (let i = currentIndex; i < currentIndex + rowsPerPage && i < rows.length; i++) {
                rows[i].style.display = "";
            }
            currentIndex += rowsPerPage;
            if (currentIndex >= rows.length) {
                document.getElementById("showMore").style.display = "none";
            }
        }

        document.addEventListener("DOMContentLoaded", () => {
            showMoreRows();
        });
    </script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/js/Reservation/reservation-checkout.js?v=1.0.1"></script>
    <script src="~/js/Shared/modal.js"></script>
}

